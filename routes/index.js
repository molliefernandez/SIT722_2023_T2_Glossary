var express = require('express');
var router = express.Router();


const itemList = [
  {'id': '#', 'title': 'Term', 'description': 'Definition' },
  {'id': 1, 'title': 'Bootstrapping', 'description': 'Bootstrapping is defined as the circumstance where an individual or an entrepreneur starts a business venture with little to no money from investors [1]' },
  {'id': 2, 'title': 'Kubernetes', 'description': 'Kubernetes is an open-source platform used to automate the deployment, scaling, and management of containerised applications in a scalable and distributed manner [2].' },
  {'id': 3, 'title': 'Terraform', 'description': 'Terraform is an open-source infrastructure as code tool which enables users to provision infrastructure resources, like virtual machines, networks, and storage. This facilitates the management and automation of cloud infrastructure deployments [3].' },
  {'id': 4, 'title': 'Docker', 'description': 'Docker is an open-source platform which allows developers to automate the packaging, distribution, and deployment of applications and their dependencies into portable containers, providing an isolated environment [4].' },
  {'id': 5, 'title': 'Microservices', 'description': 'Microservices are the result of applications being divided into a collection of small, loosely coupled, and independently deployable services. Each service focuses on a specific business capability, this enables scalability, flexibility, and easier maintenance of complex applications [5].' },
  {'id': 6, 'title': 'DevSecOps', 'description': 'DevSecOps is short for Development, Security, and Operations. It is an approach to software development and delivery that emphasises security integration practices and considerations throughout the software development lifecycle. It allows collaboration between development, security, and operation teams to address vulnerabilities, automate security checks, and promote a culture of shared responsibility for security [6]. ' },
  {'id': 7, 'title': 'Change Failure rate', 'description': 'Change Failure Rate (CFR) refers to the percentage of changes or deployments within a system or software environment that result in failure or negative outcomes. It is a metric used to measure the reliability and success of implementing changes, updates, or new features. A high change failure rate may indicate a higher risk of failures and suggest the need for improvement in the change management process [7].' },
  {'id': 8, 'title': 'Siloed Communication', 'description': 'Siloed communication refers to the situation where information and communication within an organisation are restricted to specific departments, teams, or individuals, this hinders the flow of information across various areas. When producing products this can lead to a lack of collaboration, poor coordination, and limited sharing of knowledge between stakeholders [8]. ' },
  {'id': 9, 'title': 'Agile', 'description': 'Agile is an iterative approach to software development. It emphasises flexibility, collaboration, and adaptability. It involves the delivery of working software in short iterations or time periods, which prioritises customer satisfaction, and empowers self-organising teams. Agile methodologies can enable businesses to be responsive, efficient, and better equipped to meet changing customer needs [9].' },
  {'id': 10, 'title': 'Lead Time for Changes', 'description': 'Lead time for change refers to the duration it takes to implement and deliver a change in a software development operations environment. It measures the time from the initiation of a change request to its deployment and availability in a production environment. It is a crucial metric for assessing the efficiency and effectiveness of change management processes, it provides an insight into the ability of an organisation to deliver changes and updates to systems or software applications [7].' },
  {'id': 11, 'title': 'Enterprise System', 'description': 'An enterprise system, or ERP system, is a software application that integrates and manages core business processes within an organisation. It streamlines functions like finance, HR, supply chain, and customer relations. By providing a central platform, it improves efficiency, data visibility, and decision-making [10].' },
  {'id': 12, 'title': 'FinOps', 'description': 'FinOps, short for Financial Operations, is a framework that optimises cloud financial management. It involves collaboration between finance, operations, and engineering teams to control and optimise cloud costs. By promoting cost awareness, allocation, and optimisation, FinOps enables organisations to make informed decisions and achieve cost-effective cloud operations [11].' },
  {'id': 13, 'title': 'Digital Transformation', 'description': 'Digital transformation is the integration and adoption of digital technologies and processes across an organisation with the goal of driving beneficial changes in its operations, services, and customer experiences. It involves leveraging technology to enhance efficiency, agility, innovation, and competitiveness in the digital age [12].' },
  {'id': 14, 'title': 'AIOps', 'description': 'AIOps, or Artificial Intelligence for IT Operations, is an approach that combines artificial intelligence and machine learning with traditional IT operations, this allows the enhancement of efficiency and improving decision-making. It involves automating and analyzing vast amounts of data from various IT systems to detect and resolve issues, optimize performance, and enhance IT operations [13].' },
  {'id': 15, 'title': 'SDLC (Software Development Life-cycles)', 'description': 'SDLC, or Software Development Life Cycle, is a structured approach to developing software applications. It encompasses a series of phases, including requirements gathering, design, coding, testing, deployment, and maintenance. SDLC ensures systematic development, quality assurance, and efficient management of software projects from start to finish [14].' },
  {'id': 16, 'title': 'CI/CD Pipelines', 'description': 'Continuous Integration/Continuous Delivery pipelines are automated processes that enable developers to build, test, and deploy software applications. CI/CD ensures a more reliable software development and delivery. This involves integrating code changes frequently, delivering updates to production environments and running automated tests. [15].' },
  {'id': 17, 'title': 'Monolithic Application', 'description': 'A monolithic application refers to a software architecture where the entire application is built as a single, self-contained unit. It generally has a singular codebase, database, and user interface. Monolithic applications are tightly coupled and lack modularity, making them harder to scale, maintain, and update compared to more distributed and modular architectures [16].' },
  {'id': 18, 'title': 'Waterfall Software Development', 'description': 'Waterfall software development is a sequential approach to software development. Its approach is structured with phases; requirement gathering, design, development, testing, and deployment are completed before moving on to the next. This approach does not have flexibility and emphasises documentation and upfront planning [17].' },
  {'id': 19, 'title': 'Heroku', 'description': 'Heroku is a cloud-based platform as a service (PaaS) which grants developers the ability to build, deploy, and manage applications. It supports various programming languages and frameworks while providing a scalable and flexible environment for hosting web applications. Heroku abstracts infrastructure complexities, making it easier to focus on application development and deployment [18].' },
  {'id': 20, 'title': 'CX (Customer Experience)', 'description': 'Customer Experience, is the overall opinion and satisfaction that customers have with a company based on their interactions throughout their journey. This includes all touchpoints, from the initial contact to post-purchase support, and prioritises delivering exceptional experiences to build loyalty and drive business growth [19].' },
  {'id': 21, 'title': 'Staging Environment', 'description': 'This is an environment which is created in order to test code, test builds and any updates that have been made before the changes are deployed [20].' },
  {'id': 22, 'title': 'Rollback', 'description': 'Rollback is the process where the application is rolled back to its previous version generally this is only done when there are too many problems with the newest version. Itâ€™s a bit like a callback on faulty products [20].' },
  {'id': 23, 'title': 'DevOps', 'description': 'DevOps or Development Operations is a methodology that focuses on integrating development (Dev) and operations (Ops) teams to achieve a more streamlined and automated software development and deployment [20].' },
  {'id': 24, 'title': 'Containerization', 'description': 'Containerization is the process of visualising an application and its servers. Along with the encapsulation of the application and its dependencies into a light weight environment which is isolated and called a container [20]. ' },
  {'id': 25, 'title': 'Kanban', 'description': 'Kanban is a way to manage a project and its tasks, where all tasks are laid out and the tasks are moved into different columns depending on their status, difficulty or importance [20].' },
  {'id': 26, 'title': 'Scrum', 'description': 'Scrum is an agile project management framework that emphasizes collaboration and iterative progress. It divides work into time-bound iterations called sprints, enabling teams to deliver incremental value [20]. ' },
  {'id': 27, 'title': 'Sprint', 'description': 'A sprint is a time-bound period in the Agile methodology, usually lasting 1-4 weeks, where a team works on a specific set of tasks. It results in an incremental project progressions. Sprints enhance focus and collaboration [20].' },
  {'id': 28, 'title': 'Technical Debt', 'description': 'Technical debt refers to when you are required to redo some part of the project due to taking shortcuts or using less reliable solutions, usually due to a cheaper cost [20].' },
  {'id': 29, 'title': 'COTS (Commercial Off The Shelf)', 'description': 'Commercial Off-The-Shelf (COTS) refers to software products that are ready-made and available for purchase. COTS products are pre-built and designed for widespread use without being customisable [21].' },
  {'id': 30, 'title': 'SDO (Software Delivery and Operations)', 'description': 'In software delivery operations (SDO), SDO represents the systematic management of processes, tools, and teams involved in deploying, maintaining, and optimising software applications. SDO ensures efficient code delivery, continuous integration, and seamless operations [22].' },
  {'id': 31, 'title': 'API', 'description': 'An Application Programming Interface is a set of rules and protocols that allow different software applications to communicate and interact with each other, enabling data and functionality sharing [23].'},
  {'id': 32, 'title': 'Decouple', 'description': 'Decoupling in microservices entails creating independent services that operate autonomously, reducing interdependencies for improved scalability, maintainability, and flexibility within the architecture [23].' },
  {'id': 33, 'title': 'Holacracy', 'description': 'Holacracy is a self-management organisational framework where authority is distributed across autonomous teams or "circles," fostering agile decision-making, accountability, and adaptability in a hierarchical-free structure [23].' },
  {'id': 34, 'title': 'SSH', 'description': 'SSH (Secure Shell) is a secure network protocol for encrypted communication, authentication, and remote server management, ensuring data confidentiality and integrity during remote access and file transfers [24].' },
  {'id': 35, 'title': 'Compose', 'description': 'Docker Compose is a tool that simplifies the management of multi-container Docker applications by allowing users to define and run complex application stacks using a YAML configuration file [24].' },
  {'id': 36, 'title': 'Base Image', 'description': 'A base image is the starting point for creating container images. It provides essential components and serves as a foundation for customizing containers with application code and dependencies [24].' },
  {'id': 37, 'title': 'Cluster', 'description': 'A cluster is a group of interconnected computers or servers that work together as a single system to provide high availability, scalability, and redundancy for applications and services [24].' },
  {'id': 38, 'title': 'Container Image', 'description': 'A container image is a standalone and executable package containing application code and dependencies, designed for consistent deployment across various computing environments using containerization technology [24].' },
  {'id': 39, 'title': 'Node', 'description': 'In computing, a node refers to a fundamental unit within a network or data structure. It can be a device, server, or point in a network graph, holding and processing data [24].' },
  {'id': 40, 'title': 'Registry', 'description': 'A registry is a centralised database or repository that stores and manages metadata and artifacts, often used for version control, software distribution, or container image storage in computing [24].' },
  {'id': 41, 'title': 'Docker Swarm', 'description': 'Docker Swarm is Dockers native orchestration and clustering tool, allowing the creation and management of a group of Docker containers as a single, scalable, and highly available service [24].'},
  {'id': 42, 'title': 'Virtual Machine', 'description': 'A virtual machine is a software emulation of a physical computer, running an independent operating system, allowing multiple VMs to run on a single physical server for resource isolation and flexibility [24].' },
  {'id': 43, 'title': 'Volume', 'description': 'A volume is a mechanism for persistently storing and sharing data between containers or between a container and the host system, facilitating data management and persistence in containerised applications [24].' },
  {'id': 44, 'title': 'Swarm Mode', 'description': 'Swarm mode in Docker enables orchestration and clustering of multiple Docker hosts, forming a swarm. It manages services, load balancing, scaling, and high availability for containerised applications across the swarm [24].' },
  {'id': 45, 'title': 'Container Storage Interference (CSI)', 'description': 'Container storage interference refers to conflicts and resource contention among containers for access to shared storage resources, leading to performance issues or data corruption in multi-container pods [25].' },
  {'id': 46, 'title': 'Device Plugin', 'description': 'A device plugin in Kubernetes is a specialised component that enables the allocation and management of hardware devices (e.g., GPUs, FPGAs) to containers, enhancing resource utilisation and performance [25].' },
  {'id': 47, 'title': 'End Points', 'description': 'Endpoints are network service discovery objects that represent the IP addresses and ports of pods, allowing other pods to connect and communicate with a specific service [25].' },
  {'id': 48, 'title': 'Google Kubernetes Engine (GKE)', 'description': 'Google Kubernetes Engine (GKE) is a managed Kubernetes service offered by Google Cloud that simplifies the deployment, management, and scaling of containerised applications using Kubernetes orchestration technology [25].' },
  {'id': 49, 'title': 'kubectl', 'description': 'kubectl is a command-line tool for managing and interacting with Kubernetes clusters. It enables users to deploy, scale, inspect, and control containerised applications running in Kubernetes environments [25].' },
  {'id': 40, 'title': 'Load Balancing', 'description': 'Load balancing in Kubernetes evenly distributes incoming network traffic across multiple pods or containers within a service, ensuring high availability, scalability, and optimal resource utilisation for applications [25].'},

];


/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'Glossary', subheading: 'Glossary part 5/5', subheading1: 'Reference List', items: itemList });
});

module.exports = router;
